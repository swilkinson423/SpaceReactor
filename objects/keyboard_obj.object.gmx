<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>adjust_view();
global_dpi = dpi();

highlight_a = make_color_rgb(0, 180, 255);
highlight_b = make_color_rgb(0, 150, 200);

height = max(display_w, display_h)*0.4;
y_offset = display_h+height;
fase = 0;
ease_fase = 0;
to = 1;

keystroke = "";
key_go = -1;
shown_keys = 0;
mayus = 0;
mayus_hold = 0;
fline = 0;
sline = 0;

keymap[0,0] = 'q';
keymap[0,1] = 'w';
keymap[0,2] = 'e';
keymap[0,3] = 'r';
keymap[0,4] = 't';
keymap[0,5] = 'y';
keymap[0,6] = 'u';
keymap[0,7] = 'i';
keymap[0,8] = 'o';
keymap[0,9] = 'p';
keymap[0,10] = 'a';
keymap[0,11] = 's';
keymap[0,12] = 'd';
keymap[0,13] = 'f';
keymap[0,14] = 'g';
keymap[0,15] = 'h';
keymap[0,16] = 'j';
keymap[0,17] = 'k';
keymap[0,18] = 'l';
keymap[0,19] = 'z';
keymap[0,20] = 'x';
keymap[0,21] = 'c';
keymap[0,22] = 'v';
keymap[0,23] = 'b';
keymap[0,24] = 'n';
keymap[0,25] = 'm';
keymap[0,26] = ' ';
keymap[0,27] = 'SHIFT';
keymap[0,28] = '?123';

keymap[1,0] = '1';
keymap[1,1] = '2';
keymap[1,2] = '3';
keymap[1,3] = '4';
keymap[1,4] = '5';
keymap[1,5] = '6';
keymap[1,6] = '7';
keymap[1,7] = '8';
keymap[1,8] = '9';
keymap[1,9] = '0';
keymap[1,10] = '@';
keymap[1,11] = '\#';
keymap[1,12] = '$';
keymap[1,13] = '%';
keymap[1,14] = '&amp;';
keymap[1,15] = '*';
keymap[1,16] = '-';
keymap[1,17] = '+';
keymap[1,18] = '(';
keymap[1,19] = ')';
keymap[1,20] = '!';
keymap[1,21] = '"';
keymap[1,22] = "'";
keymap[1,23] = ':';
keymap[1,24] = ';';
keymap[1,25] = '/';
keymap[1,26] = '?';
keymap[1,27] = '=\&lt;';
keymap[1,28] = 'ABC';

keymap[2,0] = '1';
keymap[2,1] = '2';
keymap[2,2] = '3';
keymap[2,3] = '4';
keymap[2,4] = '5';
keymap[2,5] = '6';
keymap[2,6] = '7';
keymap[2,7] = '8';
keymap[2,8] = '9';
keymap[2,9] = '0';
keymap[2,10] = '{';
keymap[2,11] = '}';
keymap[2,12] = 'Ç';
keymap[2,13] = '£';
keymap[2,14] = 'º';
keymap[2,15] = '^';
keymap[2,16] = '_';
keymap[2,17] = '=';
keymap[2,18] = '[';
keymap[2,19] = ']';
keymap[2,20] = '¬';
keymap[2,21] = '®';
keymap[2,22] = "©";
keymap[2,23] = '¶';
keymap[2,24] = '\';
keymap[2,25] = '&lt;';
keymap[2,26] = '&gt;';
keymap[2,27] = '?+%';
keymap[2,28] = 'ABC';



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (key_back != -1) {
    keystroke = string_copy(keystroke, 1, string_length(keystroke)-1)
    alarm[1] = 8;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global_dpi = dpi();
alarm[0] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>adjust_view();

y_offset = display_h;
height = max(display_w, display_h)*0.4;

if to != 0 {
    fase += to * 0.04;
    ease_fase = get_ease(fase, -3*to)
    y_offset = display_h+( height * (1-ease_fase));
}

if fase &gt; 1 &amp;&amp; to == 1 {
    to = 0;
    fase = 1;
    ease_fase = 1;
    y_offset = display_h+( height * (1-ease_fase));
}
if fase &lt; 0 &amp;&amp; to == -1 {
    to = 0;
    fase = 0;
    ease_fase = 0;
    y_offset = display_h+( height * (1-ease_fase));
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle_color(-1, -1, room_width, room_height, c_white, c_white, c_white, c_white, 0);

draw_set_alpha(1*ease_fase);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(kb_fnt_19_b)

key_grad_a = make_color_rgb(100, 100, 100);
key_grad_b = make_color_rgb(70, 70, 70);

gradient_a = make_color_rgb(40, 40, 40);
gradient_b = make_color_rgb(0, 0, 0);
draw_rectangle_color(-2, y_offset-height, display_w+2, y_offset+2, gradient_a, gradient_a, gradient_b, gradient_b, 0);

key_h = height/4;
key_w = display_w/10;

yy = y_offset-height;
ry = y_offset-height
xx = 0;
for (i=0; i&lt;27; i+=1) {
    am_a = (yy-ry)/height;
    am_b = ((yy-ry)+key_h)/height;
    start_col = merge_color(key_grad_a, key_grad_b, am_a);
    end_col   = merge_color(key_grad_a, key_grad_b, am_b);
    
    if (shown_keys == 1 &amp;&amp; i &lt; 27) || (shown_keys == 2 &amp;&amp; i &lt; 27) || (shown_keys == 0 &amp;&amp; i &lt; 26) {
        if (mayus != 0) {
            k = key_button(xx+5, yy+7, key_w-10, key_h-16, string_upper( keymap[shown_keys,i] ), start_col, end_col, true);
            if (mayus == 1 &amp;&amp; k == 2)
                mayus = 0;
        }
        else {
            key_button(xx+5, yy+7, key_w-10, key_h-16, keymap[shown_keys,i], start_col, end_col, true);
        }
        if (i &lt; 10 &amp;&amp; shown_keys == 0) {
            draw_set_halign(fa_right);
            draw_set_valign(fa_top);
            draw_set_font(kb_fnt_12);
            draw_text_color(xx+key_w-10, yy+8, keymap[1,i], c_black, c_black, c_black, c_black, 0.8*ease_fase)
            draw_set_halign(fa_center);
            draw_set_valign(fa_middle);
            draw_set_font(kb_fnt_19_b)
            draw_set_alpha(1*ease_fase);
        }
    }

    if (fline == 1) {
        key_mayus = key_button(5, yy+7, (key_w*1.5)-10, key_h-16, keymap[shown_keys,27], gradient_a, gradient_a, false);
        key_back = key_button(display_w-(key_w*1.5)+5, yy+7, (key_w*1.5)-10, key_h-16, "BACKSPACE", gradient_a, gradient_a, false);
        if (shown_keys == 0 &amp;&amp; key_mayus == -1)
            draw_sprite(mayus_spr, mayus, 5+(key_w*0.75)-5, yy+7+key_h-26);
    }
    fline = 0;
    sline = 0;
    if (i == 9) {
        yy += key_h;
        xx = 0;
        if (shown_keys == 0)
            xx = key_w/2;
    }
    else if (i == 18 &amp;&amp; shown_keys == 0) {
        yy += key_h;
        xx = key_w*1.5;
        fline = 1;
    }
    else if (i == 19 &amp;&amp; shown_keys &gt; 0) {
        yy += key_h;
        xx = key_w*1.5;
        fline = 1;
    }
    else {
        xx += key_w;
    }
    
    if (i == 26) {
        yy += key_h;
        am_a = (yy-ry)/height;
        am_b = ((yy-ry)+key_h)/height;
        start_col = merge_color(key_grad_a, key_grad_b, am_a);
        end_col   = merge_color(key_grad_a, key_grad_b, am_b);
    
        key_change = key_button(5, yy+7, (key_w*1.5)-10, key_h-16, keymap[shown_keys,28], gradient_a, gradient_a, false);
        key_button((key_w*1.5)+5, yy+7, (key_w)-10, key_h-16, ",", gradient_a, gradient_a, true);
        
        key_button((key_w*2.5)+5, yy+7, (key_w*5)-10, key_h-16, " ", start_col, end_col, true);

        key_button(display_w-(key_w*2.5)+5, yy+7, (key_w)-10, key_h-16, ".", gradient_a, gradient_a, true);        
        key_go = key_button(display_w-(key_w*1.5)+5, yy+7, (key_w*1.5)-10, key_h-16, "Go", highlight_a, highlight_b, false);
    }
}

if key_mayus == 2 {
    if (shown_keys == 0) {
        if mayus == 0
            mayus = 1;
        else
            mayus = 0;
    }
    else if (shown_keys == 1)
        shown_keys = 2;
    else if (shown_keys == 2)
        shown_keys = 1;
}

if mayus_hold &gt; 60
    mayus = 2;

if key_mayus != -1 {
    mayus_hold += 1;
}
else
    mayus_hold = 0;

if key_change == 2 {
    shown_keys += 1;
    if shown_keys &gt; 1
        shown_keys = 0;
}

if (key_back == 1) {
    alarm[1] = 1;
}

draw_set_halign(fa_left);
draw_text(16,16,keystroke);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>to = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
